/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/_login'
import { Route as LayoutImport } from './routes/_layout'

// Create Virtual Routes

const SignupLazyImport = createFileRoute('/signup')()
const LoginLazyImport = createFileRoute('/login')()
const ForgotpasswordLazyImport = createFileRoute('/forgotpassword')()
const LayoutIndexLazyImport = createFileRoute('/_layout/')()
const LayoutProfilepageLazyImport = createFileRoute('/_layout/profilepage')()
const LayoutOversigtLazyImport = createFileRoute('/_layout/oversigt')()
const LayoutMedialabLazyImport = createFileRoute('/_layout/medialab')()
const LayoutMakerlabLazyImport = createFileRoute('/_layout/makerlab')()
const LayoutDashboardLazyImport = createFileRoute('/_layout/dashboard')()
const LayoutBooklokaleLazyImport = createFileRoute('/_layout/booklokale')()
const LayoutAuditoriumLazyImport = createFileRoute('/_layout/auditorium')()
const LayoutAboutLazyImport = createFileRoute('/_layout/about')()

// Create/Update Routes

const SignupLazyRoute = SignupLazyImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signup.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const ForgotpasswordLazyRoute = ForgotpasswordLazyImport.update({
  id: '/forgotpassword',
  path: '/forgotpassword',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/forgotpassword.lazy').then((d) => d.Route),
)

const LoginRoute = LoginImport.update({
  id: '/_login',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexLazyRoute = LayoutIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() => import('./routes/_layout.index.lazy').then((d) => d.Route))

const LayoutProfilepageLazyRoute = LayoutProfilepageLazyImport.update({
  id: '/profilepage',
  path: '/profilepage',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout.profilepage.lazy').then((d) => d.Route),
)

const LayoutOversigtLazyRoute = LayoutOversigtLazyImport.update({
  id: '/oversigt',
  path: '/oversigt',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout.oversigt.lazy').then((d) => d.Route),
)

const LayoutMedialabLazyRoute = LayoutMedialabLazyImport.update({
  id: '/medialab',
  path: '/medialab',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout.medialab.lazy').then((d) => d.Route),
)

const LayoutMakerlabLazyRoute = LayoutMakerlabLazyImport.update({
  id: '/makerlab',
  path: '/makerlab',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout.makerlab.lazy').then((d) => d.Route),
)

const LayoutDashboardLazyRoute = LayoutDashboardLazyImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout.dashboard.lazy').then((d) => d.Route),
)

const LayoutBooklokaleLazyRoute = LayoutBooklokaleLazyImport.update({
  id: '/booklokale',
  path: '/booklokale',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout.booklokale.lazy').then((d) => d.Route),
)

const LayoutAuditoriumLazyRoute = LayoutAuditoriumLazyImport.update({
  id: '/auditorium',
  path: '/auditorium',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout.auditorium.lazy').then((d) => d.Route),
)

const LayoutAboutLazyRoute = LayoutAboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() => import('./routes/_layout.about.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_login': {
      id: '/_login'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/forgotpassword': {
      id: '/forgotpassword'
      path: '/forgotpassword'
      fullPath: '/forgotpassword'
      preLoaderRoute: typeof ForgotpasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout/about': {
      id: '/_layout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutAboutLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/auditorium': {
      id: '/_layout/auditorium'
      path: '/auditorium'
      fullPath: '/auditorium'
      preLoaderRoute: typeof LayoutAuditoriumLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/booklokale': {
      id: '/_layout/booklokale'
      path: '/booklokale'
      fullPath: '/booklokale'
      preLoaderRoute: typeof LayoutBooklokaleLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/dashboard': {
      id: '/_layout/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof LayoutDashboardLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/makerlab': {
      id: '/_layout/makerlab'
      path: '/makerlab'
      fullPath: '/makerlab'
      preLoaderRoute: typeof LayoutMakerlabLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/medialab': {
      id: '/_layout/medialab'
      path: '/medialab'
      fullPath: '/medialab'
      preLoaderRoute: typeof LayoutMedialabLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/oversigt': {
      id: '/_layout/oversigt'
      path: '/oversigt'
      fullPath: '/oversigt'
      preLoaderRoute: typeof LayoutOversigtLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/profilepage': {
      id: '/_layout/profilepage'
      path: '/profilepage'
      fullPath: '/profilepage'
      preLoaderRoute: typeof LayoutProfilepageLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexLazyImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutAboutLazyRoute: typeof LayoutAboutLazyRoute
  LayoutAuditoriumLazyRoute: typeof LayoutAuditoriumLazyRoute
  LayoutBooklokaleLazyRoute: typeof LayoutBooklokaleLazyRoute
  LayoutDashboardLazyRoute: typeof LayoutDashboardLazyRoute
  LayoutMakerlabLazyRoute: typeof LayoutMakerlabLazyRoute
  LayoutMedialabLazyRoute: typeof LayoutMedialabLazyRoute
  LayoutOversigtLazyRoute: typeof LayoutOversigtLazyRoute
  LayoutProfilepageLazyRoute: typeof LayoutProfilepageLazyRoute
  LayoutIndexLazyRoute: typeof LayoutIndexLazyRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutAboutLazyRoute: LayoutAboutLazyRoute,
  LayoutAuditoriumLazyRoute: LayoutAuditoriumLazyRoute,
  LayoutBooklokaleLazyRoute: LayoutBooklokaleLazyRoute,
  LayoutDashboardLazyRoute: LayoutDashboardLazyRoute,
  LayoutMakerlabLazyRoute: LayoutMakerlabLazyRoute,
  LayoutMedialabLazyRoute: LayoutMedialabLazyRoute,
  LayoutOversigtLazyRoute: LayoutOversigtLazyRoute,
  LayoutProfilepageLazyRoute: LayoutProfilepageLazyRoute,
  LayoutIndexLazyRoute: LayoutIndexLazyRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LoginRoute
  '/forgotpassword': typeof ForgotpasswordLazyRoute
  '/login': typeof LoginLazyRoute
  '/signup': typeof SignupLazyRoute
  '/about': typeof LayoutAboutLazyRoute
  '/auditorium': typeof LayoutAuditoriumLazyRoute
  '/booklokale': typeof LayoutBooklokaleLazyRoute
  '/dashboard': typeof LayoutDashboardLazyRoute
  '/makerlab': typeof LayoutMakerlabLazyRoute
  '/medialab': typeof LayoutMedialabLazyRoute
  '/oversigt': typeof LayoutOversigtLazyRoute
  '/profilepage': typeof LayoutProfilepageLazyRoute
  '/': typeof LayoutIndexLazyRoute
}

export interface FileRoutesByTo {
  '': typeof LoginRoute
  '/forgotpassword': typeof ForgotpasswordLazyRoute
  '/login': typeof LoginLazyRoute
  '/signup': typeof SignupLazyRoute
  '/about': typeof LayoutAboutLazyRoute
  '/auditorium': typeof LayoutAuditoriumLazyRoute
  '/booklokale': typeof LayoutBooklokaleLazyRoute
  '/dashboard': typeof LayoutDashboardLazyRoute
  '/makerlab': typeof LayoutMakerlabLazyRoute
  '/medialab': typeof LayoutMedialabLazyRoute
  '/oversigt': typeof LayoutOversigtLazyRoute
  '/profilepage': typeof LayoutProfilepageLazyRoute
  '/': typeof LayoutIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_login': typeof LoginRoute
  '/forgotpassword': typeof ForgotpasswordLazyRoute
  '/login': typeof LoginLazyRoute
  '/signup': typeof SignupLazyRoute
  '/_layout/about': typeof LayoutAboutLazyRoute
  '/_layout/auditorium': typeof LayoutAuditoriumLazyRoute
  '/_layout/booklokale': typeof LayoutBooklokaleLazyRoute
  '/_layout/dashboard': typeof LayoutDashboardLazyRoute
  '/_layout/makerlab': typeof LayoutMakerlabLazyRoute
  '/_layout/medialab': typeof LayoutMedialabLazyRoute
  '/_layout/oversigt': typeof LayoutOversigtLazyRoute
  '/_layout/profilepage': typeof LayoutProfilepageLazyRoute
  '/_layout/': typeof LayoutIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/forgotpassword'
    | '/login'
    | '/signup'
    | '/about'
    | '/auditorium'
    | '/booklokale'
    | '/dashboard'
    | '/makerlab'
    | '/medialab'
    | '/oversigt'
    | '/profilepage'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/forgotpassword'
    | '/login'
    | '/signup'
    | '/about'
    | '/auditorium'
    | '/booklokale'
    | '/dashboard'
    | '/makerlab'
    | '/medialab'
    | '/oversigt'
    | '/profilepage'
    | '/'
  id:
    | '__root__'
    | '/_layout'
    | '/_login'
    | '/forgotpassword'
    | '/login'
    | '/signup'
    | '/_layout/about'
    | '/_layout/auditorium'
    | '/_layout/booklokale'
    | '/_layout/dashboard'
    | '/_layout/makerlab'
    | '/_layout/medialab'
    | '/_layout/oversigt'
    | '/_layout/profilepage'
    | '/_layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  LoginRoute: typeof LoginRoute
  ForgotpasswordLazyRoute: typeof ForgotpasswordLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
  SignupLazyRoute: typeof SignupLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  LoginRoute: LoginRoute,
  ForgotpasswordLazyRoute: ForgotpasswordLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  SignupLazyRoute: SignupLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/_login",
        "/forgotpassword",
        "/login",
        "/signup"
      ]
    },
    "/_layout": {
      "filePath": "_layout.jsx",
      "children": [
        "/_layout/about",
        "/_layout/auditorium",
        "/_layout/booklokale",
        "/_layout/dashboard",
        "/_layout/makerlab",
        "/_layout/medialab",
        "/_layout/oversigt",
        "/_layout/profilepage",
        "/_layout/"
      ]
    },
    "/_login": {
      "filePath": "_login.jsx"
    },
    "/forgotpassword": {
      "filePath": "forgotpassword.lazy.jsx"
    },
    "/login": {
      "filePath": "login.lazy.jsx"
    },
    "/signup": {
      "filePath": "signup.lazy.jsx"
    },
    "/_layout/about": {
      "filePath": "_layout.about.lazy.jsx",
      "parent": "/_layout"
    },
    "/_layout/auditorium": {
      "filePath": "_layout.auditorium.lazy.jsx",
      "parent": "/_layout"
    },
    "/_layout/booklokale": {
      "filePath": "_layout.booklokale.lazy.jsx",
      "parent": "/_layout"
    },
    "/_layout/dashboard": {
      "filePath": "_layout.dashboard.lazy.jsx",
      "parent": "/_layout"
    },
    "/_layout/makerlab": {
      "filePath": "_layout.makerlab.lazy.jsx",
      "parent": "/_layout"
    },
    "/_layout/medialab": {
      "filePath": "_layout.medialab.lazy.jsx",
      "parent": "/_layout"
    },
    "/_layout/oversigt": {
      "filePath": "_layout.oversigt.lazy.jsx",
      "parent": "/_layout"
    },
    "/_layout/profilepage": {
      "filePath": "_layout.profilepage.lazy.jsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout.index.lazy.jsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
